# -*- snakemake -*-
import os
from snakemakelib.utils import update_config, sml_rules_path
import snakemakelib.variables as VAR

# Start by including the general snakefile
include: os.path.join(sml_rules_path(), 'bio/ngs', 'settings.rules')

config_default = { 
    VAR.BIO_GENETICS_ASSOCIATION_PLINK : {
        VAR.PLINK : {
            VAR.COMMON_OPTIONS : "--noweb",
            VAR.CMD : "plink",
            VAR.CHR : "1",
        },
    },
}

config = update_config(config, config_default)

config_default[VAR.BIO_GENETICS_ASSOCIATION_PLINK][VAR.PLINK][VAR.OPTIONS] = config[VAR.BIO_GENETICS_ASSOCIATION_PLINK][VAR.PLINK][VAR.COMMON_OPTIONS]

config = update_config(config, config_default)

cfg = config[VAR.BIO_GENETICS_ASSOCIATION_PLINK]

rule plink_ped2ld_r2:
    """Calculate r-squared linked disequilibrium from ped file. 
    """
    params: cmd = cfg[VAR.PLINK][VAR.CMD],
            options = cfg[VAR.PLINK][VAR.OPTIONS]
    input: "{prefix}.ped"
    output: "{prefix}.r2.ld"
    shell: "{params.cmd} {params.options}  --file {wildcards.prefix} --r2 --out {wildcards.prefix}.r2"

rule plink_bed2ld_r2:
    """Calculate r-squared linked disequilibrium from binary ped file.
    """
    params: cmd = cfg[VAR.PLINK][VAR.CMD],
            options = cfg[VAR.PLINK][VAR.OPTIONS]
    input: "{prefix}.bed"
    output: "{prefix}.r2.ld"
    shell: "{params.cmd} {params.options} --bfile {wildcards.prefix} --r2 --out {wildcards.prefix}.r2"

ruleorder: plink_bed2ld_r2 > plink_ped2ld_r2


rule plink_bed2ped:
    """Convert ped file to binary ped. 
    """
    params: cmd = cfg[VAR.PLINK][VAR.CMD],
            options = cfg[VAR.PLINK][VAR.OPTIONS]
    input: "{prefix}.ped"
    output: "{prefix}.bed"
    shell: "{params.cmd} {params.options}  --file {wildcards.prefix} --make-bed --out {wildcards.prefix}"

rule plink_bed_blocks:
    """Calculate linkage disequilibrium blocks(?). 
    """
    params: cmd = cfg[VAR.PLINK][VAR.CMD],
            options = cfg[VAR.PLINK][VAR.OPTIONS]
    input: "{prefix}.bed"
    output: "{prefix}.blocks"
    shell: "{params.cmd} {params.options}  --bfile {wildcards.prefix} --blocks --out {wildcards.prefix}"

rule plink_chr_bed:
    """Generate chromosome-wise bed files. 
    """
    params: cmd = cfg[VAR.PLINK][VAR.CMD],
            options = cfg[VAR.PLINK][VAR.OPTIONS],
            chr = cfg[VAR.PLINK][VAR.CHR]
    input: "{prefix}.bed"
    output: "{prefix}.chr{params.chr}.bed"
    shell: "{params.cmd} {params.options} --bfile {wildcards.prefix} --make-bed --out {wildcards.prefix}.chr{params.chr}"
