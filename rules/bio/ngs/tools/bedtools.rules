# -*- snakemake -*-
import os
from snakemakelib.config import update_sml_config, get_sml_config

include: '../settings.rules'

sml_config = get_sml_config()

config_default = { 
    'bio.ngs.tools.bedtools' : {
        'home' : os.getenv("BEDTOOLS_HOME", os.curdir),
        'bfile' : "",
        'options' : "",
        'coveragebed' : {
            'cmd' : 'coverageBed',
        },
        'intersectbed' : {
            'cmd' : 'intersectBed',
            'options' : "",
        },
        'bamtobed' : {
            'cmd' : 'bamToBed',
            'options' : "",
        },
        'sequence_capture' : {
            'bait_regions' : sml_config['bio.ngs.settings']['sequence_capture']['bait_regions'],
            'target_regions' : sml_config['bio.ngs.settings']['sequence_capture']['target_regions'],
        },
    },
}

update_sml_config(config_default)

sml_cfg = get_sml_config()

bedtools_cfg = get_sml_config('bio.ngs.tools.bedtools')

rule bedtool_bamtobed:
    """Convert a bam file to bed format"""
    params: cmd = os.path.join(bedtools_cfg['home'], bedtools_cfg['bamtobed']['cmd']),
            options = bedtools_cfg['options']
    input: "{prefix}.bam"
    output: "{prefix}.bed"
    shell: "{params.cmd} {params.options} -i {input} > {output}"

rule bedtools_bam2coverage:
    """Calculate coverage for a bam file.

    Input: {prefix}.bam; output: {prefix}.coverage
    """
    params: cmd=os.path.join(bedtools_cfg['home'], bedtools_cfg['coveragebed']['cmd']),
            options=bedtools_cfg['options'],
            bfile = bedtools_cfg['bfile']
    input: "{prefix}.bam"
    output: "{prefix}.coverage"
    shell: "{params.cmd} {params.options} -abam {input} -b {params.bfile} > {output}"


rule bedtools_intersectbed_make_region_baits:
    """Generate overlapping bed file for bait definition file"""
    params: cmd=os.path.join(bedtools_cfg['home'], bedtools_cfg['intersectbed']['cmd']),
            options = bedtools_cfg['intersectbed']['options']
    input: a="{prefix}.region_{gene}.bed", b=bedtools_cfg['sequence_capture']['bait_regions']
    output: "{prefix}.region_{gene}.baits.bed"
    shell: "{params.cmd} -a {input.a} -b {input.b} > {output}"

rule bedtools_intersectbed_make_region_targets:
    """Generate overlapping bed file for target definition file"""
    params: cmd=os.path.join(bedtools_cfg['home'], bedtools_cfg['intersectbed']['cmd']),
            options = bedtools_cfg['intersectbed']['options']
    input: a="{prefix}.region_{gene}.bed", b=bedtools_cfg['sequence_capture']['target_regions']
    output: "{prefix}.region_{gene}.targets.bed"
    shell: "{params.cmd} -a {input.a} -b {input.b} > {output}"

