# -*- snakemake -*-
import os
from snakemakelib.config import update_sml_config, sml_rules_path, get_sml_config

# Start by including the general snakefile
include: os.path.join(sml_rules_path(), 'bio/ngs', 'settings.rules')

sml_config = get_sml_config()

GATK_JAR_PROGRAM = "GenomeAnalysisTK.jar"

# FIXME: update_sml_config is run *three* separate times due to the fact
# that many rules depend on defaults in the same section. Could this
# be done more economically?
config_default = { 
    'bio.ngs.tools.gatk' : {
        'cmd' : "",
        'home' : ".",
        'bam_list' : "",
        'vcfsuffix' : ".vcf",
        'dbsnp' : sml_config['bio.ngs.settings']['db']['dbsnp'],
        'jar' : "",
        'java_mem' : sml_config['bio.ngs.settings']['java']['java_mem'],
        'java_tmpdir' : sml_config['bio.ngs.settings']['java']['java_tmpdir'],
        'known_sites' : "",
        'ref' : sml_config['bio.ngs.settings']['db']['ref'],
        'target_regions' : sml_config['bio.ngs.settings']['sequence_capture']['target_regions'],
        'bait_regions' : sml_config['bio.ngs.settings']['sequence_capture']['bait_regions'],
        'threads' : sml_config['bio.ngs.settings']['threads'],
    },
}

update_sml_config(config_default)

sml_config = get_sml_config()

# Set these rules after updating config as they depend on internal values and then redo update config 
config_default['bio.ngs.tools.gatk']['jar'] = os.path.join(sml_config['bio.ngs.tools.gatk']['home'], GATK_JAR_PROGRAM)
config_default['bio.ngs.tools.gatk']['known_sites'] = sml_config['bio.ngs.tools.gatk']['dbsnp']

config_default['bio.ngs.tools.gatk']['variant_filtration'] = {
    'cmd' : 'VariantFiltration',
    'ref' : sml_config['bio.ngs.tools.gatk']['ref'],
    'options' : "",
}

config_default['bio.ngs.tools.gatk']['read_backed_phasing'] = {
    'cmd' : 'ReadBackedPhasing',
    'ref' : sml_config['bio.ngs.tools.gatk']['ref'],
    'options' : "",
}

config_default['bio.ngs.tools.gatk']['clip_reads'] = {
    'cmd' : 'ClipReads',
    'options' : "",
}

config_default['bio.ngs.tools.gatk']['variant_eval'] = {
    'cmd' : 'VariantEval',
    'ref' : sml_config['bio.ngs.tools.gatk']['ref'],
    'options' : "-ST Filter -l INFO --doNotUseAllStandardModules --evalModule CompOverlap --evalModule CountVariants --evalModule GenotypeConcordance --evalModule TiTvVariantEvaluator --evalModule ValidationReport --stratificationModule Filter",
}

config_default['bio.ngs.tools.gatk']['select_snp_variants'] = {
    'cmd' : 'SelectSnpVariants',
    'ref' : sml_config['bio.ngs.tools.gatk']['ref'],
    'options' : "--selectTypeToInclude SNP",
}

config_default['bio.ngs.tools.gatk']['indel_realigner'] = {
    'cmd' : 'IndelRealigner',
    'ref' : sml_config['bio.ngs.tools.gatk']['ref'],
    'options' : " ".join(["-L {target}".format(target=sml_config['bio.ngs.tools.gatk']['target_regions'])])
}

config_default['bio.ngs.tools.gatk']['print_reads'] = {
    'cmd' : 'PrintReads',
    'ref' : sml_config['bio.ngs.tools.gatk']['ref'],
    'options' : ""
}

config_default['bio.ngs.tools.gatk']['realigner_target_creator'] = {
    'cmd' : 'RealignerTargetCreator',
    'ref' : sml_config['bio.ngs.tools.gatk']['ref'],
    'options' : "",
}

config_default['bio.ngs.tools.gatk']['unified_genotyper'] = {
    'cmd' : 'UnifiedGenotyper',
    'ref' : sml_config['bio.ngs.tools.gatk']['ref'],
    'options' : " ".join(["-stand_call_conf 30.0 -stand_emit_conf 10.0  --downsample_to_coverage 30 --output_mode EMIT_VARIANTS_ONLY -glm BOTH",
                        "--dbsnp {dbsnp}".format(dbsnp=sml_config['bio.ngs.tools.gatk']['dbsnp']),
                          "-L {target}".format(target=sml_config['bio.ngs.tools.gatk']['target_regions'])])
}

update_sml_config(config_default)

# And yes, we need to do it yet again due to dependency on config['bio.ngs.tools.gatk']['jar']
config_default['bio.ngs.tools.gatk']['cmd'] = "java -Xmx" + sml_config['bio.ngs.tools.gatk']['java_mem'] + " -Djava.io.tmpdir=" + sml_config['bio.ngs.tools.gatk']['java_tmpdir'] +  " -jar " + sml_config['bio.ngs.tools.gatk']['jar']

config_default['bio.ngs.tools.gatk']['base_recalibrator'] = {
    'cmd' : 'BaseRecalibrator',
    'ref' : sml_config['bio.ngs.tools.gatk']['ref'],
    'options' : " ".join([
        "-L {target}".format(target=sml_config['bio.ngs.tools.gatk']['target_regions']),
        "-knownSites {known}".format(known=sml_config['bio.ngs.tools.gatk']['known_sites'])])
}

update_sml_config(config_default)

# Use gatk config to increase readability
sml_config = get_sml_config()
gatk_config = sml_config['bio.ngs.tools.gatk']

##################################################
# Rules
##################################################
rule gatk_unified_genotyper:
    """Run GATK UnifiedGenotyper"""
    params: cmd = gatk_config['jar'] + " -T " + gatk_config['unified_genotyper']['cmd'],
            options = " ".join(["-R", gatk_config['unified_genotyper']['ref'], 
            gatk_config['unified_genotyper']['options']])
    input: "{prefix}.bam"
    output: "{prefix}.vcf"
    shell: "{params.cmd} {params.options} -I {input} -o {output}"

rule gatk_realigner_target_creator:
    """Run GATK RealignerTargetCreator"""
    params: cmd = gatk_config['jar'] + " -T " + gatk_config['realigner_target_creator']['cmd'],
            options = " ".join(["-R", gatk_config['realigner_target_creator']['ref'],
            gatk_config['realigner_target_creator']['options']])
    input: "{prefix}.bam"
    output: "{prefix}.intervals"
    shell: "{params.cmd} {params.options} -I {input} -o {output}"

rule gatk_indel_realigner:
    """Run GATK IndelRealigner"""
    params: cmd = gatk_config['jar'] + " -T " + gatk_config['indel_realigner']['cmd'],
            options = " ".join(["-R", gatk_config['indel_realigner']['ref'],
            gatk_config['indel_realigner']['options']])
    input: "{prefix}.bam", "{prefix}.intervals"
    output: "{prefix}.realign.bam"
    shell: "{params.cmd} {params.options} -o {output} --targetIntervals {input[1]}"

rule gatk_base_recalibrator:
    """Run GATK BaseRecalibrator"""
    params: cmd = gatk_config['jar'] + " -T " + gatk_config['base_recalibrator']['cmd'],
            options = gatk_config['base_recalibrator']['options']
    input: "{prefix}.bam", "{prefix}.bai"
    output: "{prefix}.recal_data.grp"
    shell: "{params.cmd} {params.options} -I {input[0]} -o {output}"

rule gatk_print_reads:
    """Run GATK PrintReads"""
    params: cmd = gatk_config['jar'] + " -T " + gatk_config['print_reads']['cmd'],
            options = " ".join(["-R", gatk_config['print_reads']['ref'],
            gatk_config['print_reads']['options']])
    input: "{prefix}.bam", "{prefix}.recal_data.grp"
    output: "{prefix}.recal.bam"
    shell: "{params.cmd} {params.options} -I {input[0]} -BQSR {input[1]} -o {output}"

rule gatk_clip_reads:
    """Run GATK ClipReads"""
    params: cmd = gatk_config['jar'] + " -T " + gatk_config['clip_reads']['cmd'],
            options = " ".join([gatk_config['clip_reads']['options']])
    input: "{prefix}.bam", "{prefix}.bai"
    output: "{prefix}.clip.bam"
    shell: "{params.cmd} {params.options} -I {input} -o {output}"

rule gatk_variant_filtration:
    """Run GATK VariantFiltration"""
    params: cmd = gatk_config['jar'] + " -T " + gatk_config['variant_filtration']['cmd'],
            options = " ".join(["-R", gatk_config['variant_filtration']['ref'],
            gatk_config['variant_filtration']['options']])
    input: "{prefix}.vcf"
    output: "{prefix}.filtered.vcf"
    shell: "{params.cmd} {params.options} --variant {input} --out {output}"

rule gatk_variant_eval:
    """Run GATK VariantEval"""
    params: cmd = gatk_config['jar'] + " -T " + gatk_config['variant_eval']['cmd'],
            options = " ".join(["-R", gatk_config['variant_eval']['ref'],
            gatk_config['variant_eval']['options']])
    input: "{prefix}.vcf"
    output: "{prefix}.eval_metrics"
    shell: "{params.cmd} {params.options} --eval {input} -o {output}"

rule gatk_read_backed_phasing:
    """Run GATK ReadBackedPhasing"""
    params: cmd = gatk_config['jar'] + " -T " + gatk_config['read_backed_phasing']['cmd'],
            options = " ".join(["-R", gatk_config['read_backed_phasing']['ref'],
                                gatk_config['read_backed_phasing']['options'],
                                "--variant {prefix}" + gatk_config['vcfsuffix']])
    input: "{prefix}.bam", "{prefix}.bai"
    output: "{prefix}.phased.vcf"
    shell: "{params.cmd} {params.options} -I {input} -o {output}"

rule gatk_select_snp_variants:
    """Run GATK SelectVariants to select SNPs"""
    params: cmd = gatk_config['jar'] + " -T " + gatk_config['select_snp_variants']['cmd'],
            options = " ".join(["-R", gatk_config['select_snp_variants']['ref'],
                                gatk_config['select_snp_variants']['options']])
    input: "{prefix}.vcf"
    output: "{prefix}.snp.vcf"
    shell: "{params.cmd} {params.options} --variant {input} --out {output}"
